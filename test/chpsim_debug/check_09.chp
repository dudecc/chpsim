//run
//check /b

process lshift()(I?, O! : {0..2})
chp { var x : {0..2}; *[ I?x; O!(x+1) MOD 3 ] }

process rshift()(I?, O! : {0..2})
chp { var x : {0..2}; *[ I?x; O!(x-1) MOD 3 ] }

type barrel = union { default : {0..2};
                      shift {lshift, rshift} : {0..2};
                    };

process A()(O! : barrel)
chp { <<; i : 1..10 : O!i MOD 3 >>; print("done") }

process B()(I? : barrel)
chp { <<; i : 2..11 : [#{I:I=i MOD 3}]; I >>; print("done") }

process BB()(I? : barrel)
chp { <<; i : 1..10 : [#{I:I=i MOD 3}]; I >>; print("done") }
meta { instance b : B; connect I.shift, b.I; }

process main()()
meta { instance a : A; instance b : BB; connect a.O, b.I; }
