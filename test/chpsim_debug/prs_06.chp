//r
//v /b
//watch O.d[0]
//watch O.d[1]
//r

process A()(O!:(e-;d[0..1]-))
hse { <<; i : 0..3 : [O.e]; O.d[i[0..0]]+; [~O.e]; O.d[i[0..0]]- >> }
process B()(I?,O!:(e-;d[0..1]-))
prs {
  var O_[0..1]+;
  var Ov-;
  << i : 0..1 :
    I.d[i] &  O.e -> O_[i]-
   ~I.d[i] & ~O.e -> O_[i]+
    O_[i] -> O.d[i]-
   ~O_[i] -> O.d[i]+
  >>
  <<& i : 0..1 :  O_[i] >> -> Ov-
  <<| i : 0..1 : ~O_[i] >> -> Ov+
  Ov -> I.e-
 ~Ov -> I.e+
}
process C()(I?:(e-;d[0..1]-))
hse { <<; i : 0..3 : I.e+; [I.d[i[0..0]]]; I.e-; [~I.d[i[0..0]]] >> }
process main()()
meta { instance a : A; instance b : B; instance c : C;
       connect a.O, b.I; connect b.O, c.I
}
